---
import { marked } from 'marked';
import insane from 'insane'
interface Props {
  title: string;
  description: string;
  date: Date | string;
  tags: string[];
  ingredients: string[];
  steps: string[];
}

const { title, description, date, tags, ingredients, steps } = Astro.props;

const renderMarkdown = (markdown: string) => insane(marked.parseInline(markdown));
---

<article class="container mx-auto p-8">
  <!-- Header Section -->
  <header class="mb-8">
    <h1 class="text-4xl font-bold">{title}</h1>
    <p class="text-lg text-gray-600">{description}</p>
    <p class="text-sm text-gray-500">{new Date(date).toLocaleDateString()}</p>
    <ul class="flex gap-2 mt-2">
      {tags.map(tag => (
        <li key={tag} class="bg-blue-100 text-blue-600 px-2 py-1 rounded" style="display: inline">
          {tag}
        </li>
      ))}
    </ul>
  </header>

  <!-- Main Content -->
  <div class="grid grid-cols-3 gap-4">
    <!-- Ingredients Section -->
    <aside class="col-span-1 bg-gray-50 p-4 rounded shadow">
      <h2 class="text-2xl font-semibold mb-4">Ingredients</h2>
      <ul class="list-disc list-inside">
        {ingredients?.map(ingredient => (
          <li set:html={renderMarkdown(ingredient)} />
        ))}
      </ul>
    </aside>

    <!-- Steps Section -->
    <section class="col-span-2 bg-white p-4 rounded shadow">
      <h2 class="text-2xl font-semibold mb-4">Steps</h2>
      <ol class="list-decimal list-inside">
        {steps.map((step, index) => (
          <li set:html={renderMarkdown(step)}></li>
        ))}
      </ol>
    </section>
  </div>
</article>
